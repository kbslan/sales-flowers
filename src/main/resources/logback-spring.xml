<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <property name="localDateTime" value="%d{yyyy-MM-dd}"/>
    <property name="logPattern" value="[%-5p] %d{yyyy-MM-dd HH:mm:ss.SSS} [%t] [%c] [%X{trace}] - %m%n"/>
    <property name="logPath" value="/web/logs/app/sales-flowers/"/>
    <property name="charSet" value="UTF-8"/>
    <property name="maxHistory" value="7"/>

    <springProperty scope="context" name="log.additivity" source="log.additivity"/>
    <springProperty scope="context" name="log.sql.level" source="log.sql.level"/>
    <springProperty scope="context" name="log.level" source="log.level"/>
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${logPattern}</pattern>
        </encoder>
    </appender>

    <!-- all -->
    <appender name="ALL_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${logPath}/all.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${logPath}/all.log.${localDateTime}</fileNamePattern>
            <maxHistory>${maxHistory}</maxHistory>
        </rollingPolicy>
        <!-- 是否立即刷新磁盘 -->
        <immediateFlush>true</immediateFlush>
        <encoder>
            <pattern>${logPattern}</pattern>
            <charset>${charSet}</charset>
        </encoder>
    </appender>
    <appender name="ASYNC_ALL_FILE" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold>102</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>512</queueSize>
        <!-- 队列已满时 非阻塞 -->
        <neverBlock>true</neverBlock>
        <!-- 扩展自FILE -->
        <appender-ref ref="ALL_FILE" />
    </appender>

    <!-- web -->
    <appender name="WEB_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${logPath}/web.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${logPath}/web.log.${localDateTime}</fileNamePattern>
            <maxHistory>${maxHistory}</maxHistory>
        </rollingPolicy>
        <!-- 是否立即刷新磁盘 -->
        <immediateFlush>true</immediateFlush>
        <encoder>
            <pattern>${logPattern}</pattern>
            <charset>${charSet}</charset>
        </encoder>
    </appender>
    <appender name="ASYNC_WEB_FILE" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold>102</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>512</queueSize>
        <!-- 队列已满时 非阻塞 -->
        <neverBlock>true</neverBlock>
        <!-- 扩展自FILE -->
        <appender-ref ref="WEB_FILE" />
    </appender>

    <!-- service -->
    <appender name="SERVICE_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${logPath}/service.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${logPath}/service.log.${localDateTime}</fileNamePattern>
            <maxHistory>${maxHistory}</maxHistory>
        </rollingPolicy>
        <!-- 是否立即刷新磁盘 -->
        <immediateFlush>true</immediateFlush>
        <encoder>
            <pattern>${logPattern}</pattern>
            <charset>${charSet}</charset>
        </encoder>
    </appender>
    <appender name="ASYNC_SERVICE_FILE" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold>102</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>512</queueSize>
        <!-- 队列已满时 非阻塞 -->
        <neverBlock>true</neverBlock>
        <!-- 扩展自FILE -->
        <appender-ref ref="SERVICE_FILE" />
    </appender>

    <!-- sql -->
    <appender name="SQL_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${logPath}/sql.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${logPath}/sql.log.${localDateTime}</fileNamePattern>
            <maxHistory>${maxHistory}</maxHistory>
        </rollingPolicy>
        <!-- 是否立即刷新磁盘 -->
        <immediateFlush>true</immediateFlush>
        <encoder>
            <pattern>${logPattern}</pattern>
            <charset>${charSet}</charset>
        </encoder>
    </appender>
    <appender name="ASYNC_SQL_FILE" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold>102</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>512</queueSize>
        <!-- 队列已满时 非阻塞 -->
        <neverBlock>true</neverBlock>
        <!-- 扩展自FILE -->
        <appender-ref ref="SQL_FILE" />
    </appender>

    <root level="${log.level}">
        <!--打印三方日志-->
        <appender-ref ref="CONSOLE"/>
    </root>

    <logger name="com.dy.sales.flowers" level="${log.level}" additivity="${log.additivity}">
        <appender-ref ref="ASYNC_ALL_FILE"/>
    </logger>

    <logger name="com.dy.sales.flowers.web" level="${log.level}" additivity="${log.additivity}">
        <appender-ref ref="ASYNC_WEB_FILE"/>
    </logger>

    <logger name="com.dy.sales.flowers.service" level="${log.level}" additivity="${log.additivity}">
        <appender-ref ref="ASYNC_SERVICE_FILE"/>
    </logger>

    <logger name="ShardingSphere-SQL" level="${log.sql.level}" additivity="false">
        <appender-ref ref="CONSOLE"/>
    </logger>


</configuration>
